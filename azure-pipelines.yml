---
trigger:
  - master

jobs:
  - job: Test
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      matrix:
        black:
          python.version: '3.7'
          tox.env: black
        isort:
          python.version: '3.7'
          tox.env: isort
        flake8:
          python.version: '3.7'
          tox.env: flake8
        py35:
          python.version: '3.5'
          tox.env: py35-django111,py35-django20,py35-django21,py35-django22
        py36:
          python.version: '3.6'
          tox.env: py36-django111,py36-django20,py36-django21,py36-django22
        py37:
          python.version: '3.7'
          tox.env: py37-django111,py37-django20,py37-django21,py37-django22

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.7'
          addToPath: false
        name: tox_python
        displayName: Get tox host Python.

      - script: $(tox_python.pythonLocation)/bin/pip install -U tox
        displayName: Install tox.

      - task: UsePythonVersion@0
        inputs:
          versionSpec: $(python.version)
          addToPath: true
        displayName: Get Python $(python.version) for tests.

      - script: $(tox_python.pythonLocation)/bin/tox -e $(tox.env)
        displayName: Run tox env '$(tox.env)'.

      - script: |
          set -x
          if [ `find . -maxdepth 1 -type f -name '.coverage.*' | wc -l` -eq 0 ]; then
            echo No coverage data found.
            exit 0
          fi
          PATH=$HOME/.local/bin:$PATH
          python$(python.version) -m pip install --user -U coverage codecov
          coverage combine
          codecov
        env:
          CODECOV_TOKEN: $(codecov.token)
        condition: succeeded()
        displayName: Report coverage.
